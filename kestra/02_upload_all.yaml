id: 02_upload_all
namespace: road-traffic-injuries
description: |
  Upload multiple non-patterned CSV files to GCS.

  Source: https://www.data.gouv.fr/fr/datasets/bases-de-donnees-annuelles-des-accidents-corporels-de-la-circulation-routiere-annees-de-2005-a-2023/

variables:
  file: "https://www.data.gouv.fr/fr/datasets/r/68848e2a-28dd-4efc-9d5f-d512f7dbe66f"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/users_{{inputs.year}}"
  table: "{{kv('GCP_DATASET')}}.users_{{inputs.year}}"
  data: "{{vars.file}}"

  files_to_upload:
    - url: "https://www.data.gouv.fr/fr/datasets/r/68848e2a-28dd-4efc-9d5f-d512f7dbe66f"
      type: "users"
      year: "2023"
    - url: "https://www.data.gouv.fr/fr/datasets/r/62c20524-d442-46f5-bfd8-982c59763ec8"
      type: "users"
      year: "2022"
    - url: "https://www.data.gouv.fr/fr/datasets/r/ba5a1956-7e82-41b7-a602-89d7dd484d7a"
      type: "users"
      year: "2021"
    - url: "https://www.data.gouv.fr/fr/datasets/r/104dbb32-704f-4e99-a71e-43563cb604f2"
      type: "details"
      year: "2023"
    - url: "https://www.data.gouv.fr/fr/datasets/r/5fc299c0-4598-4c29-b74c-6a67b0cc27e7"
      type: "details"
      year: "2022"
    - url: "https://www.data.gouv.fr/fr/datasets/r/85cfdc0c-23e4-4674-9bcd-79a970d7269b"
      type: "details"
      year: "2021"
    - url: "https://www.data.gouv.fr/fr/datasets/r/146a42f5-19f0-4b3e-a887-5cd8fbef057b"
      type: "vehicles"
      year: "2023"
    - url: "https://www.data.gouv.fr/fr/datasets/r/c9742921-4427-41e5-81bc-f13af8bc31a0"
      type: "vehicles"
      year: "2022"
    - url: "https://www.data.gouv.fr/fr/datasets/r/0bb5953a-25d8-46f8-8c25-b5c2f5ba905e"
      type: "vehicles"
      year: "2021"
    - url: "https://www.data.gouv.fr/fr/datasets/r/8bef19bf-a5e4-46b3-b5f9-a145da4686bc"
      type: "places"
      year: "2023"
    - url: "https://www.data.gouv.fr/fr/datasets/r/a6ef711a-1f03-44cb-921a-0ce8ec975995"
      type: "places"
      year: "2022"
    - url: "https://www.data.gouv.fr/fr/datasets/r/8a4935aa-38cd-43af-bf10-0209d6d17434"
      type: "places"
      year: "2021"

tasks:
  - id: bq_users_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.users`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        id_usager STRING OPTIONS (description = "User's unique identifier (including pedestrians, who are attached to the vehicles that hit them)."),
        id_vehicule STRING OPTIONS (description = "Unique identifier of the vehicle for each user occupying the vehicle (including pedestrians who are attached to the vehicles that hit them."),
        num_veh STRING OPTIONS (description = "Identifier of the vehicle taken over for each of the users occupying this vehicle (including pedestrians attached to the vehicles that hit them)."),
        place INTEGER OPTIONS (description = "Position of the user in the vehicle at the time of the accident."),
        catu INTEGER OPTIONS (description = "User category: 1 - Driver ; 2 - Passenger ; 3 - Pedestrian"),
        grav INTEGER OPTIONS (description = "Severity of user injury, accident victims are classified into three categories of victims plus those uninjured: 1 - Uninjured ; 2 - Killed ; 3 - Hospitalized ; 4 - Slightly injured"),
        sexe INTEGER OPTIONS (description = "Gender of user: 1 - Male ; 2 - Female"),
        an_nais INTEGER OPTIONS (description = "User's year of birth."),
        trajet INTEGER OPTIONS (description = "Reason for journey at time of accident: -1 - Not specified ; 0 - Not specified ; 1 - Home - Work ; 2 - Home - School ; 3 - Shopping ; 4 - Professional use ; 5 - Walking - Leisure ; 9 - Other"),
        secu1 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        secu2 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        secu3 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        locp INTEGER OPTIONS (description = "Pedestrian location : -1 - Not specified ; 0 - Not applicable ; On pavement: 1 - At + 50 m from crosswalk ; 2 - At - 50 m from crosswalk ; On crosswalk: 3 - Without light signal ; 4 - With light signal ; Other: 5 - On sidewalk ; 6 - On shoulder; 7 - On refuge or BAU ; 8 - On driveway ; 9 - Unknown"),
        actp STRING OPTIONS (description = "Pedestrian action: -1 - Unknown ; Moving: 0 - Not known or not applicable ; 1 - Direction of striking vehicle ; 2 - Opposite direction of vehicle ; Miscellaneous: 3 - Crossing ; 4 - Masked ; 5 - Playing - running ; 6 - With animal ; 9 - Other: A - Getting in/out of vehicle ; B - Unknown"),
        etatp INTEGER OPTIONS (description = "Specifies whether the pedestrian involved in the accident was alone or not: -1 - Not known ; 1 - Alone ; 2 - Accompanied ; 3 - In a group.")
      )

  - id: bq_users_staging_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.users_staging`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        id_usager STRING OPTIONS (description = "User's unique identifier (including pedestrians, who are attached to the vehicles that hit them)."),
        id_vehicule STRING OPTIONS (description = "Unique identifier of the vehicle for each user occupying the vehicle (including pedestrians who are attached to the vehicles that hit them."),
        num_veh STRING OPTIONS (description = "Identifier of the vehicle taken over for each of the users occupying this vehicle (including pedestrians attached to the vehicles that hit them)."),
        place INTEGER OPTIONS (description = "Position of the user in the vehicle at the time of the accident."),
        catu INTEGER OPTIONS (description = "User category: 1 - Driver ; 2 - Passenger ; 3 - Pedestrian"),
        grav INTEGER OPTIONS (description = "Severity of user injury, accident victims are classified into three categories of victims plus those uninjured: 1 - Uninjured ; 2 - Killed ; 3 - Hospitalized ; 4 - Slightly injured"),
        sexe INTEGER OPTIONS (description = "Gender of user: 1 - Male ; 2 - Female"),
        an_nais INTEGER OPTIONS (description = "User's year of birth."),
        trajet INTEGER OPTIONS (description = "Reason for journey at time of accident: -1 - Not specified ; 0 - Not specified ; 1 - Home - Work ; 2 - Home - School ; 3 - Shopping ; 4 - Professional use ; 5 - Walking - Leisure ; 9 - Other"),
        secu1 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        secu2 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        secu3 INTEGER OPTIONS (description = "Presence and use of safety equipment: -1 - Not specified ; 0 - No equipment ; 1 - Belt ; 2 - Helmet ; 3 - Children's device ; 4 - Reflective vest ; 5 - Airbag (2WD/3WD) ; 6 - Gloves (2WD/3WD) ; 7 - Gloves + Airbag (2WD/3WD) ; 8 - Non determinable ; 9 - Other."),
        locp INTEGER OPTIONS (description = "Pedestrian location : -1 - Not specified ; 0 - Not applicable ; On pavement: 1 - At + 50 m from crosswalk ; 2 - At - 50 m from crosswalk ; On crosswalk: 3 - Without light signal ; 4 - With light signal ; Other: 5 - On sidewalk ; 6 - On shoulder; 7 - On refuge or BAU ; 8 - On driveway ; 9 - Unknown"),
        actp STRING OPTIONS (description = "Pedestrian action: -1 - Unknown ; Moving: 0 - Not known or not applicable ; 1 - Direction of striking vehicle ; 2 - Opposite direction of vehicle ; Miscellaneous: 3 - Crossing ; 4 - Masked ; 5 - Playing - running ; 6 - With animal ; 9 - Other: A - Getting in/out of vehicle ; B - Unknown"),
        etatp INTEGER OPTIONS (description = "Specifies whether the pedestrian involved in the accident was alone or not: -1 - Not known ; 1 - Alone ; 2 - Accompanied ; 3 - In a group.")
      );

  - id: bq_details_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.details`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identification number."),
        jour INTEGER OPTIONS (description = "Day of accident."),
        mois INTEGER OPTIONS (description = "Month of accident."),
        an INTEGER OPTIONS (description = "Year of accident."),
        hrmn STRING OPTIONS (description = "Hour and minutes of accident."),
        lum INTEGER OPTIONS (description = "Light: lighting conditions in which the accident occurred: 1 - Daylight ; 2 - Dusk or dawn ; 3 - Night without street lighting ; 4 - Night with street lighting off ; 5 - Night with street lighting on"),
        dep STRING OPTIONS (description = "French department code."),
        com STRING OPTIONS (description = "French commune number as an INSEE code. The code is composed of the INSEE code followed by 3 digits."),
        agg INTEGER OPTIONS (description = "Location: 1 - Outside built-up area ; 2 - In built-up areas"),
        int INTEGER OPTIONS (description = "Intersection: 1 - Outside intersection ; 2 - X-shaped intersection ; 3 - Intersection in T ; 4 - Y intersection ; 5 - Intersection with more than 4 branches ; 6 - Roundabout ; 7 - Square ; 8 - Level crossing ; 9 - Other intersection"),
        atm INTEGER OPTIONS (description = "Weather conditions: -1 - Unknown ; 1 - Normal ; 2 - Light rain ; 3 - Heavy rain ; 4 - Snow - hail ; 5 - Fog - smoke ; 6 - Strong wind - storm ; 7 - Dazzling weather ; 8 - Overcast ; 9 - Other"),
        col INTEGER OPTIONS (description = "Type of collision: -1 - Unknown ; 1 - Two vehicles - head-on ; 2 - Two vehicles - rear ; 3 - Two vehicles - side ; 4 - Three or more vehicles - chain ; 5 - Three or more vehicles - multiple collisions ; 6 - Other collision ; 7 - No collision"),
        adr STRING OPTIONS (description = "Postal address: variable entered for accidents occurring in built-up areas."),
        lat FLOAT64 OPTIONS (description = "Latitude."),
        long FLOAT64 OPTIONS (description = "Longitude")
      )

  - id: bq_details_staging_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.details_staging`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identification number."),
        jour INTEGER OPTIONS (description = "Day of accident."),
        mois INTEGER OPTIONS (description = "Month of accident."),
        an INTEGER OPTIONS (description = "Year of accident."),
        hrmn STRING OPTIONS (description = "Hour and minutes of accident."),
        lum INTEGER OPTIONS (description = "Light: lighting conditions in which the accident occurred: 1 - Daylight ; 2 - Dusk or dawn ; 3 - Night without street lighting ; 4 - Night with street lighting off ; 5 - Night with street lighting on"),
        dep STRING OPTIONS (description = "French department code."),
        com STRING OPTIONS (description = "French commune number as an INSEE code. The code is composed of the INSEE code followed by 3 digits."),
        agg INTEGER OPTIONS (description = "Location: 1 - Outside built-up area ; 2 - In built-up areas"),
        int INTEGER OPTIONS (description = "Intersection: 1 - Outside intersection ; 2 - X-shaped intersection ; 3 - Intersection in T ; 4 - Y intersection ; 5 - Intersection with more than 4 branches ; 6 - Roundabout ; 7 - Square ; 8 - Level crossing ; 9 - Other intersection"),
        atm INTEGER OPTIONS (description = "Weather conditions: -1 - Unknown ; 1 - Normal ; 2 - Light rain ; 3 - Heavy rain ; 4 - Snow - hail ; 5 - Fog - smoke ; 6 - Strong wind - storm ; 7 - Dazzling weather ; 8 - Overcast ; 9 - Other"),
        col INTEGER OPTIONS (description = "Type of collision: -1 - Unknown ; 1 - Two vehicles - head-on ; 2 - Two vehicles - rear ; 3 - Two vehicles - side ; 4 - Three or more vehicles - chain ; 5 - Three or more vehicles - multiple collisions ; 6 - Other collision ; 7 - No collision"),
        adr STRING OPTIONS (description = "Postal address: variable entered for accidents occurring in built-up areas."),
        lat STRING OPTIONS (description = "Latitude."),
        long STRING OPTIONS (description = "Longitude")
      );

  - id: bq_vehicles_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.vehicles`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        id_vehicule STRING OPTIONS (description = "Unique identifier of the vehicle for each user occupying the vehicle (including pedestrians)."),
        num_veh STRING OPTIONS (description = "Identifier of the vehicle taken over for each user occupying this vehicle (including any pedestrians who are attached to the vehicles that hit them) - Alphanumeric code."),
        senc INTEGER OPTIONS (description = "Direction of traffic: -1 - Not specified ; 0 - Unknown ; 1 - PK or PR or postal address number ascending ; 2 - Decreasing PK or PR or postal address number ; 3 - No reference"),
        catv INTEGER OPTIONS (description = "Vehicle category (see in docs)."),
        obs INTEGER OPTIONS (description = "Fixed obstacle hit (see in docs)."),
        obsm INTEGER OPTIONS (description = "Mobile obstacle hit: -1 - Not specified ; 0 - No obstacle ; 1 - Pedestrian ; 2 - Vehicle ; 4 - Rail vehicle ; 5 - Domestic animal ; 6 - Wild animal ; 9 - Other"),
        choc INTEGER OPTIONS (description = "Initial point of impact (see in docs)."),
        manv INTEGER OPTIONS (description = "Main manoeuvre before the accident (see in docs)."),
        motor INTEGER OPTIONS (description = "Type of vehicle engine: -1 - Unknown ; 0 - Unknown ; 1 - Hydrocarbon ; 2 - Hybrid electric ; 3 - Electric ; 4 - Hydrogen ; 5 - Human ; 6 - Other."),
        occutc INTEGER OPTIONS (description = "Number of occupants in public transport.")
      )

  - id: bq_vehicles_staging_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.vehicles_staging`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        id_vehicule STRING OPTIONS (description = "Unique identifier of the vehicle for each user occupying the vehicle (including pedestrians)."),
        num_veh STRING OPTIONS (description = "Identifier of the vehicle taken over for each user occupying this vehicle (including any pedestrians who are attached to the vehicles that hit them) - Alphanumeric code."),
        senc INTEGER OPTIONS (description = "Direction of traffic: -1 - Not specified ; 0 - Unknown ; 1 - PK or PR or postal address number ascending ; 2 - Decreasing PK or PR or postal address number ; 3 - No reference"),
        catv INTEGER OPTIONS (description = "Vehicle category (see in docs)."),
        obs INTEGER OPTIONS (description = "Fixed obstacle hit (see in docs)."),
        obsm INTEGER OPTIONS (description = "Mobile obstacle hit: -1 - Not specified ; 0 - No obstacle ; 1 - Pedestrian ; 2 - Vehicle ; 4 - Rail vehicle ; 5 - Domestic animal ; 6 - Wild animal ; 9 - Other"),
        choc INTEGER OPTIONS (description = "Initial point of impact (see in docs)."),
        manv INTEGER OPTIONS (description = "Main manoeuvre before the accident (see in docs)."),
        motor INTEGER OPTIONS (description = "Type of vehicle engine: -1 - Unknown ; 0 - Unknown ; 1 - Hydrocarbon ; 2 - Hybrid electric ; 3 - Electric ; 4 - Hydrogen ; 5 - Human ; 6 - Other."),
        occutc INTEGER OPTIONS (description = "Number of occupants in public transport.")
      );

  - id: bq_places_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.places`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        vma INTEGER OPTIONS (description = "Maximum authorized speed at the place and time of the accident.")
      );

  - id: bq_places_staging_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_DATASET')}}.places_staging`
      (
        Num_Acc INTEGER OPTIONS (description = "Accident identifier."),
        catr INTEGER OPTIONS (description = "Road category: 1 - Motorway ; 2 - National road ; 3 - Route Départementale ; 4 - Voie Communales ; 5 - Not part of the public network ; 6 - Car park open to public traffic ; 7 - Urban roads ; 9 - Other."),
        voie STRING OPTIONS (description = "Road number."),
        v1 INTEGER OPTIONS (description = "Numerical index of road number (example: 2 bis, 3 ter etc.)."),
        v2 STRING OPTIONS (description = "Alphanumeric road index letter."),
        circ INTEGER OPTIONS (description = "Traffic regime: -1 - Not specified ; 1 - One-way ; 2 - Two-way ; 3 - Divided ; 4 - With variable lanes."),
        nbv INTEGER OPTIONS (description = "Total number of traffic lanes."),
        vosp INTEGER OPTIONS (description = "Indicates the existence of a dedicated lane, regardless of whether or not the accident occurs on this lane. (-1 - Not specified ; 0 - Not applicable ; 1 - Cycle track ; 2 - Cycle lane ; 3 - Reserved lane"),
        prof INTEGER OPTIONS (description = "Longitudinal profile describes the gradient of the road at the accident location (see docs)."),
        pr INTEGER OPTIONS (description = "Number of the connecting PR (upstream terminal number). A value of -1 means that the PR is not filled in."),
        pr1 STRING OPTIONS (description = "Distance in meters to PR (from upstream terminal). A value of -1 means that the PR is not filled in."),
        plan INTEGER OPTIONS (description = "Plane layout: -1 - Not specified ; 1 - Straight section ; 2 - Left-hand curve ; 3 - Right-hand curve ; 4 - S-shaped."),
        lartpc FLOAT64 OPTIONS (description = "Width of central reservation (TPC) if any (in m)."),
        larrout FLOAT64 OPTIONS (description = "Width of carriageway used for vehicular traffic, excluding hard shoulder, TPC and parking spaces (in m)."),
        surf INTEGER OPTIONS (description = "Surface condition: -1 - Not specified ; 1 - Normal ; 2 - Wet ; 3 - Puddled ; 4 - Flooded ; 5 - Snowy ; 6 - Muddy ; 7 - Icy ; 8 - Grease - oil ; 9 - Other"),
        infra INTEGER OPTIONS (description = "Infrastructure: -1 - No information ; 0 - None ; 1 - Underground - tunnel ; 2 - Bridge - autopont ; 3 - Interchange or connecting slip road ; 4 - Railway line ; 5 - Crossroads ; 6 - Pedestrian zone ; 7 - Toll plaza ; 8 - Construction site ; 9 - Other"),
        situ INTEGER OPTIONS (description = "Accident situation: -1 - Unknown ; 0 - None ; 1 - On carriageway ; 2 - On hard shoulder ; 3 - On shoulder ; 4 - On sidewalk ; 5 - On cycle track ; 6 - On other special lanes ; 8 - Other"),
        vma INTEGER OPTIONS (description = "Maximum authorized speed at the place and time of the accident.")
      );

  - id: upload_files
    type: io.kestra.plugin.core.flow.ForEach
    values: "{{ vars.files_to_upload }}"
    tasks: 
      - id: download_file
        type: io.kestra.plugin.core.http.Download
        uri: "{{ json(taskrun.value).url }}"
      
      - id: upload_to_gcs
        type: io.kestra.plugin.gcp.gcs.Upload
        from: "{{ outputs.download_file[taskrun.value].uri }}"
        to: "gs://{{kv('GCP_BUCKET_NAME')}}/{{ json(taskrun.value).type }}{{ json(taskrun.value).year }}.csv"

      - id: bq_copy_in
        type: io.kestra.plugin.gcp.bigquery.LoadFromGcs
        from:
          - "{{ outputs.upload_to_gcs[taskrun.value].uri }}"
        destinationTable: "{{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging"
        format: CSV
        maxBadRecords: 100
        csvOptions:
          fieldDelimiter: ";"
          skipLeadingRows: 1

      - id: bq_users_merge_data
        runIf: "{{ json(taskrun.value).type == 'users'}}"
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          MERGE INTO {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }} AS T
          USING {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging AS S
          ON T.id_usager = S.id_usager
          WHEN NOT MATCHED THEN
            INSERT (
              Num_Acc, id_usager, id_vehicule, num_veh, place, catu, grav, sexe, an_nais, trajet, secu1, secu2, secu3, locp, actp, etatp
            )
            VALUES (
              S.Num_Acc, S.id_usager, S.id_vehicule, S.num_veh, S.place, S.catu, S.grav, S.sexe, S.an_nais, S.trajet, S.secu1, S.secu2, S.secu3, S.locp, S.actp, S.etatp
            );

      - id: bq_details_merge_data
        runIf: "{{ json(taskrun.value).type == 'details'}}"
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          MERGE INTO {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }} AS T
          USING {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging AS S
          ON T.Num_Acc = S.Num_Acc
          WHEN NOT MATCHED THEN
            INSERT (
              Num_Acc, jour, mois, an, hrmn, lum, dep, com, agg, int, atm, col, adr, 
              lat, long
            )
            VALUES (
              S.Num_Acc, S.jour, S.mois, S.an, S.hrmn, S.lum, S.dep, S.com, S.agg, 
              S.int, S.atm, S.col, S.adr, 
              CAST(REPLACE(S.lat, ',', '.') AS FLOAT64),
              CAST(REPLACE(S.long, ',', '.') AS FLOAT64)
            );

      - id: bq_vehicles_merge_data
        runIf: "{{ json(taskrun.value).type == 'vehicles'}}"
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          MERGE INTO {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }} AS T
          USING {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging AS S
          ON T.id_vehicule = S.id_vehicule
          WHEN NOT MATCHED THEN
            INSERT (
              Num_Acc, id_vehicule, num_veh, senc, catv, obs, obsm, choc, manv, motor, occutc
            )
            VALUES (
              S.Num_Acc, S.id_vehicule, S.num_veh, S.senc, S.catv, S.obs, S.obsm, S.choc, S.manv, S.motor, S.occutc
            );

      - id: bq_places_merge_data
        runIf: "{{ json(taskrun.value).type == 'places'}}"
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          MERGE INTO {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }} AS T
          USING (
            SELECT
              Num_Acc,
              CASE
                WHEN vma IN (5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,130)
                  THEN vma
                ELSE NULL
              END AS vma
            FROM {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging
          ) AS S
          ON T.Num_Acc = S.Num_Acc
          WHEN NOT MATCHED THEN
            INSERT (
              Num_Acc, vma
            )
            VALUES (
              S.Num_Acc, S.vma
            );

      - id: bq_truncate_staging_table
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          TRUNCATE TABLE {{kv('GCP_DATASET')}}.{{ json(taskrun.value).type }}_staging;
  
 ## - id: purge_files
 ##   type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
 ##   description: If you'd like to explore Kestra outputs, disable it.
 ##   disabled: false


pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"